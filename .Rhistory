lapply
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x, mean)
c <- 1:10
lapply(c, mean)
runif
x <- list(a=matrix(1:4, 2, 2), b=matrix(1:6, 3, 2))
x
lapply(x, function(elt) elt[, 1])
x <- 1:10
sapply(x, mean)
str(apply)
x <- matrix(rnorm(200), 20, 10)
apply(x, 2, mean)
apply(x, 1, sum)
x
x <- matrix(1:200, 20, 10)
apply(x, 1, sum)
x
apply(x, 1, sum)
x <- matrix(1:20, 2, 10)
x
apply(x, 1, sum)
apply(x, 2, sum)
a <- array(rnorm(2*2*10), c(2,2,10))
a
rnorm(2*2*10)
x
a
drim(a)
dim(a)
x <- 1:100
tapply(x, 10, mean)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
f
tapply(x, f, mean)
tapply(x, f, mean, simplify=F)
tapply(x, f, range)
str(apply)
x
split(x, f)
lapply(split(x, f), mean)
tapply(split(x, f), mean)
str(tapply)
str(mapply)
mapply(rep, 1:4, 4:1)
rep(1,4)
rep(2,3)
noise <- function(n, mean, sd) {}
noise <- function(n, mean, sd) {}
noise <- function(n, mean, sd) {
rnorm(n, mean, sd)
}
noise(5, 1, 2)
mean(1:5)
mean(1:2)
traceback()
x <- 1
y <- 10
lm(y - x)
str(lm)
traceback()
debug(lm)
lm(y - x)
z
ret.x
x
exit
q
quit
recover
options(error = recover)
read.csv('ad')
library(datasets)
data(iris)
?iris
str(str)
str(lm)
x <- rnorm(100, 2, 4)
x
summary(x)
str(x)
class(x)
airquality
str(airmiles)
str(airquality)
summary(airquality)
m <- matrix(rnorm(100), 10, 10)
str(m)
m
summary(m)
s <- split(airquality, airquality$Month)
s
str(s)
summary(s)
summary(rnorm)
2
str(rnorm)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
plot(y)
plot(x, y)
summary(y)
x <- rbinom(100, 1, 0.5)
y <- 0.5 + 2 * x + e
summary(y)
plot(x, y)
sample(1:10)
letters
system.time()
Rprof()
x <- 1
summaryRprof()
set.seed(1)
rpois(5, 2)
rnorm(10)
set.seed(10)
rnorm(10)
library(xlsx)
install.packages(xlsx)
install.packages("xlsx")
library(rJava)
install.packages("rJava")
CMD
install.packages("rMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("rMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("httpr")
install.packages("httr")
pg2 = GET("http://httpbin.org/basic-auth/usr/passwd", authenticate("user", "passwd"))
library(httr)
pg2 = GET("http://httpbin.org/basic-auth/usr/passwd", authenticate("user", "passwd"))
pg2
pg2 = GET("http://httpbin.org/basic-auth/user/passwd", authenticate("user", "passwd"))
pg2
names(pg2)
class(pg2)
pg2$url
class(pg2$url)
class(1:10)
library(rhdf5)
created = h5createFile("example.h5")
created
h5createGroup("example.h5", "foo")
h5createGroup("example.h5", "bar")
h5createGroup("example.h5", "foo/foobar")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
A = matrix(1:10, nr=5, nc=2)
h5ls("example.h5")
B = array(seq(0.1, 0.2, by=0.1), dim=c(5,2,2))
attr(B, "scale") <- "
liter"
h5write(
B, "example.h5", "foo/foobar/B")
h5ls("example.h5")
readA <- h5read("example.h5", "foo/A")
readA
library(RMySQL)
dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
ucscdb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscdb, "show databases;")
result
dbDisconnect(ucscDb)
dbDisconnect(ucscdb)
ucscdb <- dbConnect(MySQL(), user="genome", host="genome-mysql.cse.ucsc.edu", db=
"hg19")
hg19 <- ucscdb
allTables <- dbListTables(hg19)
length(allTables)
head(allTables)
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
a <- dbGetQuery(hg19, "select * from affyU133Plus2 limit1")
a
a <- dbGetQuery(hg19, "select * from affyU133Plus2 limit 1")
a
class(a)
dbDisconnect(hg19)
dbDisconnect(ucscdb)
setwd("~/NyProjects/R-learning/clean_data_course")
source('~/NyProjects/R-learning/clean_data_course/run_analysis.R', echo=TRUE)
write_to_file(calculate_means(merge_data()), "tidy_data/result.csv")
?write.csv
?names
v <- "tBodyAcc-mean()-X"
v
?gsub
gsub("^t", "Time in ", v)
gsub("^t", "Time domain ", v)
gsub("^t", "Time domain ", "ttt")
gsub("^t", "Time domain ", "tBodyt")
gsub("^t", "Time domain ", "tBodyt ")
gsub("^t", "Time domain ", "att")
v <- gsub("^t", "Time in ", v)
v
gsub("Time domain", "Body ", v)
gsub("^Time in Body", "Body ", v)
gsub("^Time in Body", "Time in Body ", v)
gsub(" Body", "Time in Body ", v)
gsub(" Body", "Body ", v)
gsub(" Body", " Body ", v)
v <- gsub(" Body", " Body ", v)
gsub(" Acc", " Acceleration ", v)
v <- gsub(" Acc", " Acceleration ", v)
gsub(" -mean()", " Mean ", v)
gsub(" -mean\(\)", " Mean ", v)
gsub(" -mean\\(\\)", " Mean ", v)
v <- gsub(" -mean\\(\\)", " Mean ", v)
v
v <- gsub("-X$", "of X", v)
v
?gsub
gsub("([ab])", "\\1_\\1_", "abc and ABC")
v <- "tBodyAcc-mean()-X"
gsub("-[X|Y|Z]$", "\\1", v)
gsub("[X|Y|Z]$", "\\1", v)
gsub("[X|Y|Z]$", "\1", v)
gsub("[X|Y|Z]$", "\\1", v)
gsub("[X|Y|Z]", "\\1", v)
gsub("[X|Y|Z]$", "-\\1", v)
gsub("-[X|Y|Z]$", "\\1", v)
gsub("-[X|Y|Z]$", "\\", v)
gsub("-[X|Y|Z]$", "\\2", v)
gsub("-[X|Y|Z]$", "\\3", v)
gsub("-[X|Y|Z]$", "\\0", v)
gsub("-[X|Y|Z]$", "\\1", v)
gsub("-[X|Y|Z]$", "\\1___", v)
gsub("-[X|Y|Z]$", "\\1", v)
grep("[X|Y]", v)
v
y <- "tBodyAcc-mean()-Y"
grep("[X|Y]", v)
grep("[X|Y]", y)
z <- "tBodyAcc-mean()-Z"
grep("[X|Y]", z)
gsub("-X$", "\\1", v)
gsub("X$", "\\1", v)
gsub("X", "\\1", v)
gsub("(-X$)", "\\1", v)
gsub("(-X$)", "\\1", v)
v <- "tBodyAcc-mean()-X"
v <- gsub("^t", "Average of ", v)
v <- gsub(" Acc", " Acceleration", v)
v <- gsub(" -mean\\(\\)", " Mean ", v)
gsub("(-X$)", "\\1", v)
v <- "tBodyAcc-mean()-X"
v <- gsub("^t", "Average of ", v)
v <- gsub("Acc", " Acceleration", v)
v <- gsub(" -mean\\(\\)", " Mean ", v)
gsub("(-X$)", "\\1", v)
v <- "tBodyAcc-mean()-X"
v <- gsub("^t", "Average of ", v)
v <- gsub("Acc", " Acceleration", v)
v <- gsub("-mean\\(\\)", " Mean", v)
gsub("-([X|Y|Z]$)", "\\1", v)
v <- "tBodyAcc-mean()-X"
v <- gsub("^t", "Average of ", v)
v <- gsub("Acc", " Acceleration", v)
v <- gsub("-mean\\(\\)", " Mean", v)
gsub("-([X|Y|Z]$)", " \\1", v)
names <- c("tBodyAcc-mean()-X","tBodyAcc-mean()-Y","tBodyAcc-mean()-Z","tBodyAcc-std()-X","tBodyAcc-std()-Y","tBodyAcc-std()-Z","tGravityAcc-mean()-X","tGravityAcc-mean()-Y","tGravityAcc-mean()-Z","tGravityAcc-std()-X","tGravityAcc-std()-Y","tGravityAcc-std()-Z","tBodyAccJerk-mean()-X","tBodyAccJerk-mean()-Y","tBodyAccJerk-mean()-Z","tBodyAccJerk-std()-X","tBodyAccJerk-std()-Y","tBodyAccJerk-std()-Z","tBodyGyro-mean()-X","tBodyGyro-mean()-Y","tBodyGyro-mean()-Z","tBodyGyro-std()-X","tBodyGyro-std()-Y","tBodyGyro-std()-Z","tBodyGyroJerk-mean()-X","tBodyGyroJerk-mean()-Y","tBodyGyroJerk-mean()-Z","tBodyGyroJerk-std()-X","tBodyGyroJerk-std()-Y","tBodyGyroJerk-std()-Z","tBodyAccMag-mean()","tBodyAccMag-std()","tGravityAccMag-mean()","tGravityAccMag-std()","tBodyAccJerkMag-mean()","tBodyAccJerkMag-std()","tBodyGyroMag-mean()","tBodyGyroMag-std()","tBodyGyroJerkMag-mean()","tBodyGyroJerkMag-std()","fBodyAcc-mean()-X","fBodyAcc-mean()-Y","fBodyAcc-mean()-Z","fBodyAcc-std()-X","fBodyAcc-std()-Y","fBodyAcc-std()-Z","fBodyAccJerk-mean()-X","fBodyAccJerk-mean()-Y","fBodyAccJerk-mean()-Z","fBodyAccJerk-std()-X","fBodyAccJerk-std()-Y","fBodyAccJerk-std()-Z","fBodyGyro-mean()-X","fBodyGyro-mean()-Y","fBodyGyro-mean()-Z","fBodyGyro-std()-X","fBodyGyro-std()-Y","fBodyGyro-std()-Z","fBodyAccMag-mean()","fBodyAccMag-std()","fBodyBodyAccJerkMag-mean()","fBodyBodyAccJerkMag-std()","fBodyBodyGyroMag-mean()","fBodyBodyGyroMag-std()","fBodyBodyGyroJerkMag-mean()","fBodyBodyGyroJerkMag-std()")
source('~/NyProjects/R-learning/clean_data_course/run_analysis.R', echo=TRUE)
rename_column(names[1])
rename_column(names[100])
rename_column(names[60])
source('~/NyProjects/R-learning/clean_data_course/run_analysis.R', echo=TRUE)
rename_column(names[60])
source('~/NyProjects/R-learning/clean_data_course/run_analysis.R', echo=TRUE)
rename_column(names[60])
rename_column(names[40])
rename_column(names[20])
source('~/NyProjects/R-learning/clean_data_course/run_analysis.R', echo=TRUE)
rename_column(names[20])
rename_column(names[40])
rename_column(names[60])
names
sapply(names, function(n) rename_column(n))
r <- sapply(names, function(n) rename_column(n))
class(r)
r[1]
names(r)
length(r)
r
source('~/.active-rstudio-document')
m <- calculate_means(merge_data())
names(m)
names <- names(m)
names <- sapply(names, function(n) rename_column(n))
names
names(m) <- names
head(m)
source('~/NyProjects/R-learning/clean_data_course/run_analysis.R', echo=TRUE)
write_to_file(calculate_means(merge_data()), "tidy_data/result.csv")
is.na(data)
data
r <- calculate_means(merge_data())
r
names(r)
assign_column_names(r)
names(r)
names(r) <- sapply(names(r), function(n) rename_column(n))
names(r)
source('~/NyProjects/R-learning/clean_data_course/run_analysis.R', echo=TRUE)
write_to_file(calculate_means(merge_data()), "tidy_data/result.csv")
